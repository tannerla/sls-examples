service: sls-examples

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: eu-west-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn"] }
  environment:
    USERS_TABLE: ${self:custom.tableName}

custom:
  customDomain:
    domainName: api.leontanner.dev
    stage: ${self:provider.stage}
    basePath: ""
    certificateName: "leontanner.dev"
    createRoute53Record: true
  # webpack:
    # webpackConfig: ./webpack.config.js
    # includeModules: true
  tableName: "users-table-${self:provider.stage}"
  dynamodb:
    start:
      migrate: true

plugins:
  - serverless-domain-manager
  # - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline

functions:
  hello:
    handler: index.handler
    events:
      - http: GET /
  bye:
    handler: index.handler
    events:
      - http: "GET /bye"
  getUser:
    handler: index.handler
    events:
      - http: "GET /users/{proxy+}"
  createUser:
    handler: index.handler
    events:
      - http: "POST /users"

resources:
  Resources:
    UsersDynamoDBTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}
